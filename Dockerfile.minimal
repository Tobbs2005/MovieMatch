# Multi-stage build for minimal Docker image
FROM python:3.11-slim as builder

WORKDIR /app

# Install build dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    && rm -rf /var/lib/apt/lists/*

# Create minimal requirements
RUN echo "fastapi==0.116.1" > requirements-minimal.txt && \
    echo "uvicorn[standard]==0.35.0" >> requirements-minimal.txt && \
    echo "pandas==2.3.1" >> requirements-minimal.txt && \
    echo "numpy==2.3.2" >> requirements-minimal.txt && \
    echo "sentence-transformers==5.0.0" >> requirements-minimal.txt && \
    echo "faiss-cpu==1.11.0.post1" >> requirements-minimal.txt && \
    echo "boto3==1.34.162" >> requirements-minimal.txt && \
    echo "python-dotenv==1.0.1" >> requirements-minimal.txt && \
    echo "pydantic==2.11.7" >> requirements-minimal.txt && \
    echo "scikit-learn==1.7.1" >> requirements-minimal.txt

# Install dependencies in builder stage
RUN pip install --no-cache-dir --user -r requirements-minimal.txt

# Production stage
FROM python:3.11-slim

WORKDIR /app

# Copy only the installed packages from builder
COPY --from=builder /root/.local /root/.local

# Copy source code
COPY src/ ./src/

# Create non-root user
RUN adduser --disabled-password --gecos '' appuser && chown -R appuser /app
USER appuser

# Set environment variables
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1
ENV PATH=/root/.local/bin:$PATH
ENV TRANSFORMERS_CACHE=/tmp
ENV HF_HOME=/tmp

EXPOSE 8000

CMD ["python", "-m", "uvicorn", "src.swipe_api:app", "--host", "0.0.0.0", "--port", "8000"]
